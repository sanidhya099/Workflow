@attribute [Authorize(Roles = "Client")]
@page "/ClientInput"
@using Microsoft.AspNetCore.Components.Authorization
@inject IJSRuntime js
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject ProtectedSessionStorage ProtectedSessionStore
@inject IJSRuntime js

<body style="background-color: #0a253b;">
    <NavMenu />

    <main>
        <EditForm Model="@PackageView" class="p-2" OnValidSubmit="@SubmitForm">
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />
            <Container class="full-height">
                <div class="container bg-light shadow rounded-lg p-4">
                    <h3 class="mb-4">New Package</h3>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="typeOfRequest" class="form-label">Type of Request:</label>
                                <InputSelect id="typeOfRequest" class="form-select" @bind-Value="PackageView.TypeOfRequest">
                                    <option value="" disabled>Select</option>
                                    <option value="WPS">Request for information</option>
                                    <option value="Drawing">Document Review</option>
                                </InputSelect>
                            </div>

                            <div class="mb-3">
                                <label for="dateSubmitted" class="form-label">Start Date:</label>
                                <InputDate id="dateSubmitted" class="form-control" @bind-Value="PackageView.DateSubmitted" />
                            </div>

                            <div class="mb-3">
                                <label for="deadline" class="form-label">Deadline:</label>
                                <InputDate id="deadline" class="form-control" @bind-Value="PackageView.Deadline" />
                            </div>

                            <div class="mb-3">
                                <label for="priority" class="form-label">Priority Level:</label>
                                <InputSelect id="priority" class="form-select" @bind-Value="PackageView.Priority">
                                    <option value="" disabled>Select Priority</option>
                                    <option style="color: green;">5</option>
                                    <option style="color: green;">4</option>
                                    <option style="color: orange;">3</option>
                                    <option style="color: orange;">2</option>
                                    <option style="color: red;">1</option>
                                </InputSelect>
                            </div>

                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="packageNumber" class="form-label">Package Number:</label>
                                <input type="number" id="packageNumber" class="form-control" @bind="PackageView.PackageNumber" min="0" />
                            </div>

                            <div class="mb-3">
                                <label for="fileAttachment" class="form-label">File Attachments:</label>
                                <InputFile OnChange="HandleFiles" id="fileAttachment" class="form-control" multiple />
                            </div>

                            <div class="mb-3">
                                <label for="Information" class="form-label">Additional Comments:</label>
                                <InputTextArea id="Information" class="form-control" @bind-Value="PackageView.Information" rows="4" />
                            </div>
                        </div>
                    </div>
                    <div class="d-flex justify-content-between mt-4">

                        <div>
                            <MudButton Variant="MudBlazor.Variant.Filled" Color="Color.Primary" class="btn btn-secondary" @onclick="GoToPreviousPackages">Previous Packages</MudButton>
                            <MudButton Variant="MudBlazor.Variant.Filled" Color="Color.Primary" class="btn btn-secondary" @onclick="ResetForm">Clear Form</MudButton>
                        </div>
                        <div style="display: flex; align-items: end;">
                            <div style="margin-inline:15px; margin-bottom:10px;">
                                @if (isUploading)
                                {
                                    <div class="loading-circle"></div>
                                }
                                else
                                {
                                    <div style="font-weight:600;">@uploadStatus</div>
                                }
                                @* <MudButton Variant="MudBlazor.Variant.Filled" Color="Color.Primary" class="btn btn-primary mt-6" @onclick="UploadFiles">Upload</MudButton> *@
                            </div>

                            <div>
                                <MudButton Variant="MudBlazor.Variant.Filled" Color="Color.Primary" class="btn btn-secondary" @onclick="SubmitForm">Submit</MudButton>
                            </div>
                        </div>
                    </div>
                </div>
            </Container>
        </EditForm>

    </main>
</body>

@code {
    private string firstName;
    private int ClientID;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        firstName = user.Claims.FirstOrDefault(c => c.Type == "FirstName")?.Value ?? "Unknown";
        var clientIDString = user.Claims.FirstOrDefault(c => c.Type == "UserID")?.Value;

        // Convert string to int
        if (int.TryParse(clientIDString, out int clientID))
        {
            ClientID = clientID;
        }
        Username = ClientDataService.GetClientEdit(ClientID).UserName;

    }
}
