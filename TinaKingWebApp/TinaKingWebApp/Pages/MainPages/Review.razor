@attribute [Authorize(Roles = "Admin,Manager,Reviewer")]
@page "/review/{sPackageId?}"
@using TinaKingSystem.ViewModels;

<MudLayout>
	<NavMenu></NavMenu>
	<MainMenu></MainMenu>
	<MudMainContent>
		<MudContainer>
			<form style="margin-top:30px">
				<table>
					<tr>
						<td width="33%">
							<section style="width:100%; padding-bottom:15px">
								<h3>Main Information</h3>
								<MudNumericField HideSpinButtons="@(true)"
												 Label="WPS Number"
												 @bind-Value="WPSView.WPSNo"
												 For="(() => WPSView.WPSNo)"
												 Variant="MudBlazor.Variant.Text" />
							</section>
							<section style="width:100%; padding-bottom:15px">
								<h3>Welding Process</h3>
								<MudSelect TextChanged="@(()=>OnUpdate())" T="string" Label="Welding Process Type" AnchorOrigin="Origin.BottomCenter" @bind-Value="WPSView.WeldingProcess.ProcessType">
									<MudSelectItem Value="@("FCAW")">Flux Core Arc Welding</MudSelectItem>
									<MudSelectItem Value="@("SMAW")">Shielded Metal Arc Welding</MudSelectItem>
									<MudSelectItem Value="@("GTAW")">Gas Tungsten Arc Welding</MudSelectItem>
									<MudSelectItem Value="@("GMAW")">Gas Metal Arc Welding</MudSelectItem>
								</MudSelect>
								<h6>Backing</h6>
								<MudRadioGroup Value="WPSView.WeldingProcess.Backing" ValueChanged="(int x) => {WPSView.WeldingProcess.Backing=x; OnUpdate();}">
									<MudRadio Value="@(1)" Color="Color.Primary" Dense="true">Yes</MudRadio>
									<MudRadio Value="@(0)" Color="Color.Warning" Dense="false">No</MudRadio>
								</MudRadioGroup>
								@if (WPSView.WeldingProcess.Backing == 1){
								<div style="margin-left:20px">
									<MudSelect TextChanged="@(()=>OnUpdate())" T="string" Label="Type of Backing" AnchorOrigin="Origin.BottomCenter" @bind-Value="WPSView.WeldingProcess.TypeOfBacking">
										<MudSelectItem Value="@("WeldMetal")">Weld Metal</MudSelectItem>
										<MudSelectItem Value="@("Strip")">Strip</MudSelectItem>
										<MudSelectItem Value="@("NonFusing")">Non-fusing</MudSelectItem>
										<MudSelectItem Value="@("Fusing")">Fusing</MudSelectItem>
										<MudSelectItem Value="@("Other")">Other</MudSelectItem>
									</MudSelect>
									@if (WPSView.WeldingProcess.TypeOfBacking == "Other")
									{
										<div style="margin-left:20px">
											<MudTextField Label="Other Backing"
													@bind-Value="WPSView.WeldingProcess.BackingOther"
													For="(() => WPSView.WeldingProcess.BackingOther)" />
										</div>
									}
								</div>
								}
								<h6>Is post weld required?</h6>
								<MudRadioGroup Value="WPSView.WeldingProcess.PostWeldRequired" ValueChanged="(int x) =>{WPSView.WeldingProcess.PostWeldRequired=x; OnUpdate();}">
									<MudRadio Value="@(1)" Color="Color.Primary" Dense="true">Yes</MudRadio>
									<MudRadio Value="@(0)" Color="Color.Warning" Dense="false">No</MudRadio>
								</MudRadioGroup>
								@if (WPSView.WeldingProcess.PostWeldRequired == 1){
								<div style="margin-left:20px">
									<h6>Is temp range correct?</h6>
									<MudRadioGroup Value="WPSView.PreHeatAndPostWeld.PWHTempRangeCorrect" ValueChanged="(int x) =>{WPSView.PreHeatAndPostWeld.PWHTempRangeCorrect=x; OnUpdate();}">
										<MudRadio Value="@(1)" Color="Color.Primary" Dense="true">Yes</MudRadio>
										<MudRadio Value="@(0)" Color="Color.Warning" Dense="false">No</MudRadio>
									</MudRadioGroup>
									<h6>Is soak time correct?</h6>
									<MudRadioGroup Value="WPSView.PreHeatAndPostWeld.PWHSoaktimeCorrect" ValueChanged="(int x) =>{WPSView.PreHeatAndPostWeld.PWHSoaktimeCorrect=x; OnUpdate();}">
										<MudRadio Value="@(1)" Color="Color.Primary" Dense="true">Yes</MudRadio>
										<MudRadio Value="@(0)" Color="Color.Warning" Dense="false">No</MudRadio>
									</MudRadioGroup>
									<h6>Is solution anneal required?</h6>
									<MudRadioGroup Value="WPSView.PreHeatAndPostWeld.SolutionAnnealRequired" ValueChanged="(int x) =>{WPSView.PreHeatAndPostWeld.SolutionAnnealRequired=x; OnUpdate();}">
										<MudRadio Value="@(1)" Color="Color.Primary" Dense="true">Yes</MudRadio>
										<MudRadio Value="@(0)" Color="Color.Warning" Dense="false">No</MudRadio>
									</MudRadioGroup>
								</div>
								}
								<h6>Thickness Range</h6>
								<MudRadioGroup Value="WPSView.WeldingProcess.MaxThicknessRange" ValueChanged="(int x) => {WPSView.WeldingProcess.MaxThicknessRange=x; OnUpdate();}">
									<MudRadio Value="@(1)" Color="Color.Primary" Dense="true">
										Is equal to 2 * T ? 
									</MudRadio>
									<MudRadio Value="@(0)" Color="Color.Secondary" Dense="false">8 inches</MudRadio>
								</MudRadioGroup>
								<h6>Is the max pass thickness greater than 13mm?</h6>
								<MudRadioGroup Value="WPSView.WeldingProcess.MinThicknessRange" ValueChanged="(int x) => {WPSView.WeldingProcess.MinThicknessRange=x; OnUpdate();}">
									<MudRadio Value="@(1)" Color="Color.Primary" Dense="true">Yes</MudRadio>
									<MudRadio Value="@(0)" Color="Color.Warning" Dense="false">No</MudRadio>
								</MudRadioGroup>
							</section>
							<section style="width:100%; padding-bottom:15px">
								<h3>Base metal</h3>
								<div>
									<MudSelect TextChanged="@(()=>OnUpdate())" T="string" Label="Type of Base metal" AnchorOrigin="Origin.BottomCenter" @bind-Value="WPSView.WeldingProcess.TypeOfBaseMetal">
										<MudSelectItem Value="@("metal")">METAL</MudSelectItem>
										<MudSelectItem Value="@("uns")">UNS number</MudSelectItem>
										<MudSelectItem Value="@("any")">Any chemical analysis  stated</MudSelectItem>
									</MudSelect>
									@if (WPSView.WeldingProcess.TypeOfBaseMetal == "metal")
									{
									<div style="margin-left:20px">
										<MudTextField Label="Metal1 PNumber"
														@bind-Value="WPSView.WeldingProcess.Metal1"
														For="(() => WPSView.WeldingProcess.Metal1)" />
										<MudTextField Label="Metal1 Group Number"
														@bind-Value="WPSView.WeldingProcess.Metal1Group"
														For="(() => WPSView.WeldingProcess.Metal1Group)" />
										<label>Welded to</label>
										<MudTextField Label="Metal2 PNumber"
														@bind-Value="WPSView.WeldingProcess.Metal2"
														For="(() => WPSView.WeldingProcess.Metal2)" />
										<MudTextField Label="Metal2 Group Number"
														@bind-Value="WPSView.WeldingProcess.Metal2Group"
														For="(() => WPSView.WeldingProcess.Metal2Group)" />
									</div>
									}
									else if (WPSView.WeldingProcess.TypeOfBaseMetal == "uns")
									{
									<div style="margin-left:20px">
										<MudTextField Label="UNS Number or Material"
														@bind-Value="WPSView.WeldingProcess.UNSNumber"
														For="(() => WPSView.WeldingProcess.UNSNumber)" />
									</div>
									}
									else if (WPSView.WeldingProcess.TypeOfBaseMetal == "any")
									{
									<div style="margin-left:20px">
											<h6>Any chemical analysis stayed</h6>
											<MudRadioGroup Value="WPSView.WeldingProcess.MetalOtherStay" ValueChanged="(int x) =>{WPSView.WeldingProcess.MetalOtherStay=x; OnUpdate();}">
												<MudRadio Value="@(1)" Color="Color.Primary" Dense="true">Yes</MudRadio>
												<MudRadio Value="@(0)" Color="Color.Warning" Dense="false">No</MudRadio>
											</MudRadioGroup>
									</div>
									}
								</div>
								
								@if (WPSView.WeldingProcess.ProcessType == "GTAW" || WPSView.WeldingProcess.ProcessType == "FCAW") {
									<h3>Mode Of Transfer</h3>
								<div style="margin-left:20px">
									<MudSelect TextChanged="@(()=>OnUpdate())" T="string" Label="Mode of Transfer" AnchorOrigin="Origin.BottomCenter" @bind-Value="WPSView.WeldingSpecification.ModeOfTransfer">
										<MudSelectItem Value="@("globular")">Globular</MudSelectItem>
										<MudSelectItem Value="@("spray")">Spray</MudSelectItem>
										<MudSelectItem Value="@("circuit")">Short-circuit</MudSelectItem>
										<MudSelectItem Value="@("notMatch")">Does not match</MudSelectItem>
									</MudSelect>
									<h6>Is mode of transfer matches that on PQR</h6>
									<MudRadioGroup Value="WPSView.WeldingSpecification.MOT" ValueChanged="(int x) => {WPSView.WeldingSpecification.MOT=x; OnUpdate();}">
										<MudRadio Value="@(1)" Color="Color.Primary" Dense="true">Yes</MudRadio>
										<MudRadio Value="@(0)" Color="Color.Warning" Dense="false">No</MudRadio>
									</MudRadioGroup>
								</div>
								}
								@if (WPSView.WeldingProcess.ProcessType == "FCAW" || WPSView.WeldingProcess.ProcessType == "SMAW")
								{
								<div style="margin-left:20px">
									<h3>Filler Metal Information</h3>
									<h6>Electrode flux classification, correct?</h6>
									<MudRadioGroup Value="WPSView.FillerMetal.ElectrodeFluxClassififcationCorrect" ValueChanged="(int x) => {WPSView.FillerMetal.ElectrodeFluxClassififcationCorrect=x; OnUpdate();}">
										<MudRadio Value="@(1)" Color="Color.Primary" Dense="true">Yes</MudRadio>
										<MudRadio Value="@(0)" Color="Color.Warning" Dense="false">No</MudRadio>
									</MudRadioGroup>
									<h6>Is flux trade name correctly stated?</h6>
									<MudRadioGroup Value="WPSView.FillerMetal.FluxTradeNameStatedCorrect" ValueChanged="(int x) => {WPSView.FillerMetal.FluxTradeNameStatedCorrect=x; OnUpdate();}">
										<MudRadio Value="@(1)" Color="Color.Primary" Dense="true">Yes</MudRadio>
										<MudRadio Value="@(0)" Color="Color.Warning" Dense="false">No</MudRadio>
									</MudRadioGroup>
									<h6>Is flux trade name not stated?</h6>
									<MudRadioGroup Value="WPSView.FillerMetal.FluxTradeNameNotStated" ValueChanged="(int x) => {WPSView.FillerMetal.FluxTradeNameNotStated=x; OnUpdate();}">
										<MudRadio Value="@(1)" Color="Color.Primary" Dense="true">Yes</MudRadio>
										<MudRadio Value="@(0)" Color="Color.Warning" Dense="false">No</MudRadio>
									</MudRadioGroup>
									<h6>Was flux trade name stated as the manufacturer’s address?</h6>
									<MudRadioGroup Value="WPSView.FillerMetal.FluxTradeNameStatedAsManufacturer" ValueChanged="(int x) => {WPSView.FillerMetal.FluxTradeNameStatedAsManufacturer=x; OnUpdate();}">
										<MudRadio Value="@(1)" Color="Color.Primary" Dense="true">Yes</MudRadio>
										<MudRadio Value="@(0)" Color="Color.Warning" Dense="false">No</MudRadio>
									</MudRadioGroup>
								</div>
								}
							</section>
						</td>
						<td width="33%">
							<h3>Filler</h3>
							<h6>SFA correct?</h6>
							<MudRadioGroup Value="WPSView.Filler.SFA" ValueChanged="(int x) =>{WPSView.Filler.SFA=x; OnUpdate();}">
								<MudRadio Value="@(1)" Color="Color.Primary" Dense="true">Yes</MudRadio>
								<MudRadio Value="@(0)" Color="Color.Warning" Dense="false">No</MudRadio>
							</MudRadioGroup>
							<h6>F-No. correct?</h6>
							<MudRadioGroup Value="WPSView.Filler.FNo" ValueChanged="(int x) =>{WPSView.Filler.FNo=x; OnUpdate();}">
								<MudRadio Value="@(1)" Color="Color.Primary" Dense="true">Yes</MudRadio>
								<MudRadio Value="@(0)" Color="Color.Warning" Dense="false">No</MudRadio>
							</MudRadioGroup>
							<h6>A-No. correct?</h6>
							<MudRadioGroup Value="WPSView.Filler.ANo" ValueChanged="(int x) =>{WPSView.Filler.ANo=x; OnUpdate();}">
								<MudRadio Value="@(1)" Color="Color.Primary" Dense="true">Yes</MudRadio>
								<MudRadio Value="@(0)" Color="Color.Warning" Dense="false">No</MudRadio>
							</MudRadioGroup>
							<h6>Size of filler metal same as PQR?</h6>
							<MudRadioGroup Value="WPSView.Filler.SizeMatchesPQR" ValueChanged="(int x) =>{WPSView.Filler.SizeMatchesPQR=x; OnUpdate();}">
								<MudRadio Value="@(1)" Color="Color.Primary" Dense="true">Yes</MudRadio>
								<MudRadio Value="@(0)" Color="Color.Warning" Dense="false">No</MudRadio>
							</MudRadioGroup>
							<h6>Does the product form on the WPS match that on the PQR?</h6>
							<MudRadioGroup Value="WPSView.Filler.ProductFormMatchesPQR" ValueChanged="(int x) => {WPSView.Filler.ProductFormMatchesPQR=x; OnUpdate();}">
								<MudRadio Value="@(1)" Color="Color.Primary" Dense="true">Yes</MudRadio>
								<MudRadio Value="@(0)" Color="Color.Warning" Dense="false">No</MudRadio>
								@if (WPSView.Filler.ProductFormMatchesPQR == 1)
								{
								<div style="margin-left:20px">
									<MudSelect TextChanged="@(()=>OnUpdate())" T="string" Label="Type of Product Form" AnchorOrigin="Origin.BottomCenter" @bind-Value="WPSView.Filler.TypeOfproductForm">
										<MudSelectItem Value="@("FloxCode")">Flox Code</MudSelectItem>
										<MudSelectItem Value="@("Solid")">Solid</MudSelectItem>
									</MudSelect>
								</div>
								}
							</MudRadioGroup>
							<h6>Supplemental filler metal used on PQR?</h6>
							<MudRadioGroup Value="WPSView.Filler.SupplementUsed" ValueChanged="(int x) => {WPSView.Filler.SupplementUsed=x; OnUpdate();}">
								<MudRadio Value="@(1)" Color="Color.Primary" Dense="true">Yes</MudRadio>
								<MudRadio Value="@(0)" Color="Color.Warning" Dense="false">No</MudRadio>
							</MudRadioGroup>
							<h6>Is Deposit Thickness Qualified</h6>
							<MudRadioGroup Value="WPSView.Filler.DepositThickness" ValueChanged="(int x) => {WPSView.Filler.DepositThickness=x; OnUpdate();}">
								<MudRadio Value="@(1)" Color="Color.Primary" Dense="true">Is equal to 2 * T ?</MudRadio>
								<MudRadio Value="@(0)" Color="Color.Secondary" Dense="false">8 inches</MudRadio>
							</MudRadioGroup>
							<h6>Consumable inserted used</h6>
							<MudRadioGroup Value="WPSView.Filler.ConsumableInsert" ValueChanged="(int x) => {WPSView.Filler.ConsumableInsert=x; OnUpdate();}">
								<MudRadio Value="@(1)" Color="Color.Primary" Dense="true">Yes</MudRadio>
								<MudRadio Value="@(0)" Color="Color.Warning" Dense="false">No</MudRadio>
							</MudRadioGroup>
							<h3>Position</h3>
							<MudRadioGroup Value="WPSView.Position.PositionType" ValueChanged="(string x) => {WPSView.Position.PositionType=x; OnUpdate();}">
								<MudRadio Value="@("all")" Color="Color.Primary" Dense="true">All</MudRadio>
								<MudRadio Value="@("flat")" Color="Color.Primary" Dense="false">Flat</MudRadio>
								<MudRadio Value="@("horz")" Color="Color.Primary" Dense="false">Horizontal</MudRadio>
								<MudRadio Value="@("vert")" Color="Color.Primary" Dense="false">Vertical</MudRadio>
							</MudRadioGroup>
							@if (WPSView.Position.PositionType == "vert")
							{
							<div style="margin-left:20px">
								<h6>Is the progression</h6>
								<MudRadioGroup Value="WPSView.Position.TypeOfProgression" ValueChanged="(string x) => {WPSView.Position.TypeOfProgression=x; OnUpdate();}">
									<MudRadio Value="@("up")" Color="Color.Primary" Dense="false">Up</MudRadio>
									<MudRadio Value="@("down")" Color="Color.Primary" Dense="false">Down</MudRadio>
								</MudRadioGroup>
								<h6>Is there a progression restriction by the client?</h6>
								<MudRadioGroup Value="WPSView.Position.ProgressionRestriction" ValueChanged="(int x) => {WPSView.Position.ProgressionRestriction=x; OnUpdate();}">
									<MudRadio Value="@(1)" Color="Color.Primary" Dense="false">Yes</MudRadio>
									<MudRadio Value="@(0)" Color="Color.Primary" Dense="false">No</MudRadio>
								</MudRadioGroup>
							</div>
							}
							
							@if (WPSView.WeldingProcess.ProcessType == "FCAW"
							||	WPSView.WeldingProcess.ProcessType == "GTAW"
							||	WPSView.WeldingProcess.ProcessType == "GMAW")
							{
							<div style="margin-left:20px">
								<h6>Shielding gas correct composition with PQR?</h6>
								<MudRadioGroup Value="WPSView.AdditionalDetail.SheildingGasCompositionCorrect" ValueChanged="(int x) =>{WPSView.AdditionalDetail.SheildingGasCompositionCorrect=x; OnUpdate();}">
									<MudRadio Value="@(1)" Color="Color.Primary" Dense="true">Yes</MudRadio>
									<MudRadio Value="@(0)" Color="Color.Warning" Dense="false">No</MudRadio>
								</MudRadioGroup>
								<h6>Shielding Trailing gas used?</h6>
								<MudRadioGroup Value="WPSView.AdditionalDetail.TrailingGasUsed" ValueChanged="(int x) =>{WPSView.AdditionalDetail.TrailingGasUsed=x; OnUpdate();}">
									<MudRadio Value="@(1)" Color="Color.Primary" Dense="true">Yes</MudRadio>
									<MudRadio Value="@(0)" Color="Color.Warning" Dense="false">No</MudRadio>
								</MudRadioGroup>
								<h6>Shielding Backing gas used?</h6>
								<MudRadioGroup Value="WPSView.AdditionalDetail.BackingGasUsed" ValueChanged="(int x) =>{WPSView.AdditionalDetail.BackingGasUsed=x; OnUpdate();}">
									<MudRadio Value="@(1)" Color="Color.Primary" Dense="true">Yes</MudRadio>
									<MudRadio Value="@(0)" Color="Color.Warning" Dense="false">No</MudRadio>
								</MudRadioGroup>
								<MudSelect TextChanged="@(()=>OnUpdate())" T="string" Label="Number of Electrode" AnchorOrigin="Origin.BottomCenter" @bind-Value="WPSView.AdditionalDetail.NumberOfElectrode">
									<MudSelectItem Value="@("single")">Single</MudSelectItem>
									<MudSelectItem Value="@("multi")">Multiple</MudSelectItem>
								</MudSelect>
								<MudSelect TextChanged="@(()=>OnUpdate())" T="string" Label="Number of pass on the PQR matches" AnchorOrigin="Origin.BottomCenter" @bind-Value="WPSView.AdditionalDetail.NumberOfPassMatchesPQR">
									<MudSelectItem Value="@("single")">Single</MudSelectItem>
									<MudSelectItem Value="@("multi")">Multiple</MudSelectItem>
								</MudSelect>
								<h6>Shielding Peening allowed by client</h6>
								<MudRadioGroup Value="WPSView.AdditionalDetail.PeeningAllowed" ValueChanged="(int x) =>{WPSView.AdditionalDetail.PeeningAllowed=x; OnUpdate();}">
									<MudRadio Value="@(1)" Color="Color.Primary" Dense="true">Yes</MudRadio>
									<MudRadio Value="@(0)" Color="Color.Warning" Dense="false">No</MudRadio>
								</MudRadioGroup>
								<h6>Shielding Impact test required?</h6>
								<MudRadioGroup Value="WPSView.AdditionalDetail.ImpactTestRequired" ValueChanged="(int x) =>{WPSView.AdditionalDetail.ImpactTestRequired=x; OnUpdate();}">
									<MudRadio Value="@(1)" Color="Color.Primary" Dense="true">Yes</MudRadio>
									<MudRadio Value="@(0)" Color="Color.Warning" Dense="false">No</MudRadio>
								</MudRadioGroup>
								<h6>Shielding Is the maximum heat stated?</h6>
								<MudRadioGroup Value="WPSView.AdditionalDetail.MaxHeatStated" ValueChanged="(int x) =>{WPSView.AdditionalDetail.MaxHeatStated=x; OnUpdate();}">
									<MudRadio Value="@(1)" Color="Color.Primary" Dense="true">Yes</MudRadio>
									<MudRadio Value="@(0)" Color="Color.Warning" Dense="false">No</MudRadio>
								</MudRadioGroup>
							</div>
							}
							else
							{
							<div style="margin-left:20px">
								<MudTextField Label="Comment Section"
											  @bind-Value="WPSView.AdditionalDetail.CommentSection"
											  For="(() => WPSView.AdditionalDetail.CommentSection)" />
							</div>
							}
							<MudTextField Label="What is the required Temp?"
										  @bind-Value="WPSView.AdditionalDetail.impactTestTempRequirement"
										  For="(() => WPSView.AdditionalDetail.impactTestTempRequirement)" />

							<h6>Shielding Is Is the percentage shear stated?</h6>
							<MudRadioGroup Value="WPSView.AdditionalDetail.PercentageShearStated" ValueChanged="(int x) =>{WPSView.AdditionalDetail.PercentageShearStated=x; OnUpdate();}">
								<MudRadio Value="@(1)" Color="Color.Primary" Dense="true">Yes</MudRadio>
								<MudRadio Value="@(0)" Color="Color.Warning" Dense="false">No</MudRadio>
							</MudRadioGroup>
							<h6>Shielding Is Is this a fullsize specimen?</h6>
							<MudRadioGroup Value="WPSView.AdditionalDetail.FullSizeSpecimen" ValueChanged="(int x) =>{WPSView.AdditionalDetail.FullSizeSpecimen=x; OnUpdate();}">
								<MudRadio Value="@(1)" Color="Color.Primary" Dense="true">Yes</MudRadio>
								<MudRadio Value="@(0)" Color="Color.Warning" Dense="false">No</MudRadio>
							</MudRadioGroup>
							<h6>Shielding Is Impact test temp matches or is lower that the requirement?</h6>
							<MudRadioGroup Value="WPSView.AdditionalDetail.ImpactTestTempMatch" ValueChanged="(int x) =>{WPSView.AdditionalDetail.ImpactTestTempMatch=x; OnUpdate();}">
								<MudRadio Value="@(1)" Color="Color.Primary" Dense="true">Yes</MudRadio>
								<MudRadio Value="@(0)" Color="Color.Warning" Dense="false">No</MudRadio>
							</MudRadioGroup>
						</td>
						<td width="34%">
							<h3>PNumber</h3>
								<h6>Shielding Is Is PNumber is P10H or material stated as Duplex</h6>
								<MudRadioGroup Value="WPSView.AdditionalDetail.Process1" ValueChanged="(int x) =>{WPSView.AdditionalDetail.Process1=x; OnUpdate();}">
									<MudRadio Value="@(1)" Color="Color.Primary" Dense="true">Yes</MudRadio>
									<MudRadio Value="@(0)" Color="Color.Warning" Dense="false">No</MudRadio>
								</MudRadioGroup>
							@if (WPSView.AdditionalDetail.Process1 == 1)
							{
							<div style="margin-left:20px">
								<h6>Shielding Is corrosion testing done</h6>
								<MudRadioGroup Value="WPSView.AdditionalDetail.Process2" ValueChanged="(int x) =>{WPSView.AdditionalDetail.Process2=x; OnUpdate();}">
									<MudRadio Value="@(1)" Color="Color.Primary" Dense="true">Yes</MudRadio>
									<MudRadio Value="@(0)" Color="Color.Warning" Dense="false">No</MudRadio>
								</MudRadioGroup>
								@if (WPSView.AdditionalDetail.Process2 == 1)
								{
								<div style="margin-left:20px">
									<h6>Shielding Is Any Pitting</h6>
									<MudRadioGroup Value="WPSView.AdditionalDetail.Pitting" ValueChanged="(int x) =>{WPSView.AdditionalDetail.Pitting=x; OnUpdate();}">
										<MudRadio Value="@(1)" Color="Color.Primary" Dense="true">Yes</MudRadio>
										<MudRadio Value="@(0)" Color="Color.Warning" Dense="false">No</MudRadio>
									</MudRadioGroup>
									<h6>Shielding Is Any wear</h6>
									<MudRadioGroup Value="WPSView.AdditionalDetail.Wear" ValueChanged="(int x) =>{WPSView.AdditionalDetail.Wear=x; OnUpdate();}">
										<MudRadio Value="@(1)" Color="Color.Primary" Dense="true">Yes</MudRadio>
										<MudRadio Value="@(0)" Color="Color.Warning" Dense="false">No</MudRadio>
									</MudRadioGroup>
								</div>
								}
								<h6>Shielding Is Ferrite Content Test done?</h6>
								<MudRadioGroup Value="WPSView.AdditionalDetail.FerriteContentTest" ValueChanged="(int x) =>{WPSView.AdditionalDetail.FerriteContentTest=x; OnUpdate();}">
									<MudRadio Value="@(1)" Color="Color.Primary" Dense="true">Yes</MudRadio>
									<MudRadio Value="@(0)" Color="Color.Warning" Dense="false">No</MudRadio>
								</MudRadioGroup>
								@if (WPSView.AdditionalDetail.FerriteContentTest == 1){
								<div style="margin-left:20px">
									<h6>Shielding Is Between 35 – 60?</h6>
									<MudRadioGroup Value="WPSView.AdditionalDetail.FerriteContentInRange" ValueChanged="(int x) =>{WPSView.AdditionalDetail.FerriteContentInRange=x; OnUpdate();}">
										<MudRadio Value="@(1)" Color="Color.Primary" Dense="true">Yes</MudRadio>
										<MudRadio Value="@(0)" Color="Color.Warning" Dense="false">No</MudRadio>
									</MudRadioGroup>
								</div>
								}
								<h6>Shielding Post weld heat treatment</h6>
								<MudRadioGroup Value="WPSView.AdditionalDetail.PostWeldTreatment" ValueChanged="(int x) =>{WPSView.AdditionalDetail.PostWeldTreatment=x; OnUpdate();}">
									<MudRadio Value="@(1)" Color="Color.Primary" Dense="true">Yes</MudRadio>
									<MudRadio Value="@(0)" Color="Color.Warning" Dense="false">No</MudRadio>
								</MudRadioGroup>
								@if (WPSView.AdditionalDetail.PostWeldTreatment == 1){
								<div style="margin-left:20px">
								<h6>Shielding Post Is Temperature correct?</h6>
								<MudRadioGroup Value="WPSView.AdditionalDetail.PostWeldHeatTempCorrect" ValueChanged="(int x) =>{WPSView.AdditionalDetail.PostWeldHeatTempCorrect=x; OnUpdate();}">
									<MudRadio Value="@(1)" Color="Color.Primary" Dense="true">Yes</MudRadio>
									<MudRadio Value="@(0)" Color="Color.Warning" Dense="false">No</MudRadio>
								</MudRadioGroup>
								<h6>Shielding Post Is Dwell time correct?</h6>
								<MudRadioGroup Value="WPSView.AdditionalDetail.DwellTimeCorrect" ValueChanged="(int x) =>{WPSView.AdditionalDetail.DwellTimeCorrect=x; OnUpdate();}">
									<MudRadio Value="@(1)" Color="Color.Primary" Dense="true">Yes</MudRadio>
									<MudRadio Value="@(0)" Color="Color.Warning" Dense="false">No</MudRadio>
								</MudRadioGroup>
								<h6>Shielding Post Quenched in water?</h6>
								<MudRadioGroup Value="WPSView.AdditionalDetail.QuenchedInWater" ValueChanged="(int x) =>{WPSView.AdditionalDetail.QuenchedInWater=x; OnUpdate();}">
									<MudRadio Value="@(1)" Color="Color.Primary" Dense="true">Yes</MudRadio>
									<MudRadio Value="@(0)" Color="Color.Warning" Dense="false">No</MudRadio>
								</MudRadioGroup>
								</div>
								}
								<h6>Shielding Pitting corrosion resistance?</h6>
								<MudRadioGroup Value="WPSView.AdditionalDetail.PittingCorrosionResistance" ValueChanged="(int x) =>{WPSView.AdditionalDetail.PittingCorrosionResistance=x; OnUpdate();}">
									<MudRadio Value="@(1)" Color="Color.Primary" Dense="true">Yes</MudRadio>
									<MudRadio Value="@(0)" Color="Color.Warning" Dense="false">No</MudRadio>
								</MudRadioGroup>
								@if (WPSView.AdditionalDetail.PittingCorrosionResistance == 1){
								<div style="margin-left:20px">
									<h6>Shielding Pitting Is Number correct?</h6>
									<MudRadioGroup Value="WPSView.AdditionalDetail.IsNumberCorrect" ValueChanged="(int x) =>{WPSView.AdditionalDetail.IsNumberCorrect=x; OnUpdate();}">
										<MudRadio Value="@(1)" Color="Color.Primary" Dense="true">Yes</MudRadio>
										<MudRadio Value="@(0)" Color="Color.Warning" Dense="false">No</MudRadio>
									</MudRadioGroup>
									<h6>Shielding Pitting Is Impact test correct?</h6>
									<MudRadioGroup Value="WPSView.AdditionalDetail.IsImpactCorrect" ValueChanged="(int x) =>{WPSView.AdditionalDetail.IsImpactCorrect=x; OnUpdate();}">
										<MudRadio Value="@(1)" Color="Color.Primary" Dense="true">Yes</MudRadio>
										<MudRadio Value="@(0)" Color="Color.Warning" Dense="false">No</MudRadio>
									</MudRadioGroup>
								</div>
								}
							</div>
							}

							<div class="summary-section">
								<h3>Summary of Flagged Items</h3>
								@if (flaggedItems.Count > 0)
								{
									<ul>
										@foreach (var item in flaggedItems)
										{
											<li>@item</li>
										}
									</ul>
								}
								else
								{
									<p>No issues flagged.</p>
								}
							</div>
							<button type="button" @onclick="@(() => SubmitAsync())">Submit</button>
						</td>
					</tr>
				</table>
			</form>
		</MudContainer>
	</MudMainContent>
</MudLayout>